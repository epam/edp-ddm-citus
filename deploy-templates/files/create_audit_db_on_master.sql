-- command to invoke script from shell
--psql -U $PSQL_USER -f create_audit_db_on_master.sql -v anSvcUser="'$AN_SVC_USER'" -v anSvcPass="'$AN_SVC_PASS'" -v anRoleName="'$AN_ROLE'" -v anRolePass="'$AN_PASS'" -v anAdmUser="'$AN_ADM_ROLE'" -v anAdmPass="'$AN_ADM_PASS'"


-- database audit
select 'create database audit'
  where not exists (select from pg_database where datname = 'audit')
\gexec


-- role analytics_admin
select 'create role ' || :anAdmUser || ' with password ' || :'anAdmPass' || ' login'
  where not exists (select from pg_catalog.pg_roles where rolname = :anAdmUser)
\gexec

select 'alter role ' || :anAdmUser || ' with password ' || :'anAdmPass' || ' login'
\gexec


-- role analytics_auditor
select 'create role ' || :anRoleName || ' with password ' || :'anRolePass' || ' login'
  where not exists (select from pg_catalog.pg_roles where rolname = :anRoleName)
\gexec

select 'alter role ' || :anRoleName || ' with password ' || :'anRolePass' || ' login'
\gexec


-- role audit_service_user
select 'create role ' || :anSvcUser || ' with password ' || :'anSvcPass' || ' login'
  where not exists (select from pg_catalog.pg_roles where rolname = :anSvcUser)
\gexec

select 'alter role ' || :anSvcUser || ' with password ' || :'anSvcPass' || ' login'
\gexec


-- connect to audit db
\c audit


--NB. UUID type is not used. So extension "uuid-ossp" is not needed.
-- extension uuid-ossp
--create extension if not exists "uuid-ossp";


-- table audit_event
create table if not exists audit_event (
    id bigint generated by default as identity not null,
	request_id text not null,
	application text not null,
	name text not null,
	type text not null,
	timestamp timestamp without time zone not null,
	user_id text,
	user_name text,
	source_system text,
	source_business_id text,
	source_business_process text,
	context text,
	received timestamp without time zone default now() not null,
	constraint audit_event__id__pk primary key (id)
);


-- view audit_event_user_action_v
create or replace view audit_event_user_action_v as
select id
	 , request_id
     , application
     , name
     , type
     , "timestamp"
     , user_id
     , user_name
     , source_business_id
     , source_business_process
     , source_system
     , context::jsonb ->> 'action'::text    as action
     , context::jsonb ->> 'step'::text      as step
     , context::jsonb ->> 'tablename'::text as tablename
     , context::jsonb ->> 'row_id'::text    as row_id
     , context::jsonb ->> 'fields'::text    as fields
     , context::jsonb 						as cntx
  from audit_event
  where type = 'USER_ACTION'::text;


-- view audit_event_security_event_v
create or replace view audit_event_security_event_v as
select id
	 , request_id
     , application
     , name
     , type
     , "timestamp"
     , user_id
     , user_name
     , source_business_id
     , source_business_process
     , source_system
     , context::jsonb ->> 'action'::text    as action
     , context::jsonb 						as cntx
  from audit_event
  where type = 'SECURITY_EVENT'::text;


-- revoke
revoke connect on database audit from public;
revoke all on audit_event from public;
revoke all on audit_event_user_action_v from public;
revoke all on audit_event_security_event_v from public;


-- grants
-- role analytics_admin
select 'grant connect on database audit to ' || :anAdmUser
\gexec

-- role analytics_auditor
select 'grant connect on database audit to ' || :anRoleName
\gexec
select 'grant select on audit_event_user_action_v to ' || :anRoleName
\gexec
select 'grant select on audit_event_security_event_v to ' || :anRoleName
\gexec

-- role audit_service_user
select 'grant connect on database audit to ' || :anSvcUser
\gexec
select 'grant insert on audit_event to ' || :anSvcUser
\gexec

