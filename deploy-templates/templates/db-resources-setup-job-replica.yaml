apiVersion: batch/v1
kind: Job
metadata:
  name: "db-objects-setup-on-citus-replica"
  annotations:
    # This is what defines this resource as a hook.
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "citus-replica-setup-job"
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/name: "citus-replica-setup-job"
        app.kubernetes.io/instance: "replica"
    spec:
      serviceAccountName: {{ .Values.name }}
      restartPolicy: Never
      containers:
        - name: "db-objects-setup-replica"
          image: {{ .Values.dockerProxyRegistry }}/bitnami/postgresql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - '-c'
            - >-
              psql postgres -U $PSQL_USER --host=citus-master-rep -f /etc/create_all_others_on_replica.sql -v regOwnerName="'$REG_OWNER'" -v regOwnerPass="'$REG_OWNER_PASS'" -v appRoleName="'$APP_ROLE'" -v appRolePass="'$APP_PASS'" -v admRoleName="'$ADM_ROLE'" -v admRolePass="'$ADM_PASS'" -v anAdmUser="'$AN_ADM_ROLE'" -v anAdmPass="'$AN_ADM_PASS'"
          volumeMounts:
            - name: all-other-on-replica-db
              mountPath: /etc/create_all_others_on_replica.sql
              readOnly: true
              subPath: create_all_others_on_replica.sql
          env:
            - name: AN_ADM_ROLE
              valueFrom:
                secretKeyRef:
                  name: citus-roles-secrets
                  key: anAdmUser
            - name: AN_ADM_PASS
              valueFrom:
                secretKeyRef:
                  name: citus-roles-secrets
                  key: anAdmPass
            - name: REG_OWNER
              valueFrom:
                secretKeyRef:
                  name: citus-roles-secrets
                  key: regOwnerName
            - name: REG_OWNER_PASS
              valueFrom:
                secretKeyRef:
                  name: citus-roles-secrets
                  key: regOwnerPass
            - name: APP_ROLE
              valueFrom:
                secretKeyRef:
                  name: citus-roles-secrets
                  key: appRoleName
            - name: APP_PASS
              valueFrom:
                secretKeyRef:
                  name: citus-roles-secrets
                  key: appRolePass
            - name: PSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.master.containers.env.pgsecret_name }}
                  key: {{ .Values.master.containers.env.user_name }}
            - name: PGDATA
              value: {{ .Values.master.containers.env.pgdata_value }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.master.containers.env.pgsecret_name }}
                  key: {{ .Values.master.containers.env.pgsecret_key }}
            - name: PGTZ
              value: {{ .Values.database.timezone }}
      volumes:
        - name: all-other-on-replica-db
          configMap:
            name: all-other-on-replica-db